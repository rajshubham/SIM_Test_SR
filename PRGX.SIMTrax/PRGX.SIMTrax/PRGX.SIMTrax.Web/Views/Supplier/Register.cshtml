@model PRGX.SIMTrax.ViewModel.SellerRegister
@{
    ViewBag.Title = "Register";
    var isValidUser = (Session[PRGX.SIMTrax.Domain.Util.Constants.SESSION_USER] != null) ? true : false;
}
@Styles.Render("~/bundles/multiselectCss")
@Styles.Render("~/bundles/TipsoCss")

@{
    var isCampaignPage = (Session[PRGX.SIMTrax.Domain.Util.Constants.SESSION_CAMPAIGN_ID] != null) ? true : false;
    var userCulture = (Session[PRGX.SIMTrax.Domain.Util.Constants.USER_PREFERENCE_CULTURE] != null) ? (System.Globalization.CultureInfo)Session[PRGX.SIMTrax.Domain.Util.Constants.USER_PREFERENCE_CULTURE] : PRGX.SIMTrax.Web.Controllers.BaseController.ResolveCulture();
}

<style>
    .disabled {
        opacity: 0.4;
        filter: alpha(opacity=40);
    }

    .body-no-scroll {
        overflow: hidden !important;
    }

    #demoTree li {
        margin-top: 10px !important;
    }

    .SICCodeLink,  a.SICCodeLink:visited {
        color: #449d44;
    }

    a.SICCodeLink:hover {
        text-decoration: underline !important;
        color: #449d44 !important;
    }

    @@media (max-width: 770px) {
        .status-bar {
            margin-left: -500px !important;
            margin-right: -32px !important;
            padding-left: 500px;
            padding-right: 32px;
        }
        /*these work*/
    }
</style>

<div class="row">

    <div class="col-md-12">
        <div class="bread-crumb">
            @{if (isCampaignPage)
                {
                    <a href="/">@Session[PRGX.SIMTrax.Domain.Util.Constants.SESSION_BUYER_NAME].ToString() invite</a>@: > @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.REGISTER, userCulture).ToString()
                }
                else
                {
                    <a href="/">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.LOGIN, userCulture).ToString()</a>@: > @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.REG_A_SUPPLIER, userCulture).ToString() > <span id="registerBreadCrumb">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CREATE_AN_ACCOUNT, userCulture).ToString()</span>
                }
            }
        </div>
    </div>

    <div class="col-md-12 col-sm-12 col-xs-12" style="margin-bottom: 20px; margin-top: 20px;">
        <div class="status-bar">
            <div class="col-md-12 col-sm-12 panel-content" style="text-align: center">
                <span id="userPanel" class="panel-item-enabled" data-breadcrumb="Create your user account">1. @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CREATE_AN_ACCOUNT, userCulture).ToString() </span><span class="symbol-padding  hidden-xs fa fa-chevron-right panel-item-disabled "></span>
                <span class="panel-item-disabled hidden-xs" id="companyPanel" data-breadcrumb="General Information">2. @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.GENERAL_INFORMATION, userCulture).ToString()    </span><span class="symbol-padding hidden-xs panel-item-disabled  fa fa-chevron-right"></span>
                <span class="panel-item-disabled hidden-xs" id="contactPanel" data-breadcrumb="Contacts">3. @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CONTACTS, userCulture).ToString()    </span><span class="symbol-padding hidden-xs panel-item-disabled fa fa-chevron-right"></span>
                <span class="panel-item-disabled hidden-xs" id="verificationPanel" data-breadcrumb="Verification">4. @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SUBMIT_REGISTRATION, userCulture).ToString()</span>
            </div>
        </div>
    </div>
    <form id="signUpForm" name="signUpForm" enctype="multipart/form-data" method="post" action="/Supplier/RegisterDetails" autocomplete="off">
        @Html.HiddenFor(m => m.UserPartyId)
        @Html.HiddenFor(m => m.SellerPartyId)
        @Html.HiddenFor(m => m.RefRegionId)
        @Html.HiddenFor(m => m.TermsOfUseId)
        @Html.HiddenFor(m => m.IsPreRegistered)
        @for (int i = 0; i < Model.IdentifierTypeList.Count; i++)
        {
            @Html.HiddenFor(model => Model.IdentifierTypeList[i].Value)
            @Html.HiddenFor(model => Model.IdentifierTypeList[i].Text)
        }        
        <div id="userDetails" style="width: 100%; float: left">
            <div class="col-md-8  col-sm-12 col-xs-12">
                <div class="container-white-backgound margin-before-footer" style="padding-left: 15px; padding-right: 15px">
                    <div class="col-md-12 padding-bottom">
                        <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.STEP_1_OF_4, userCulture).ToString(): @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CREATE_AN_ACCOUNT, userCulture).ToString()</span>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstName)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = " form-control", maxlength = 40 })
                        </div>
                        <div class="col-md-5 paddingError ">
                            @Html.ValidationMessageFor(m => m.FirstName)
                        </div>
                    </div>

                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.LastName)
                        </div>

                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.LastName, new { @class = " form-control", maxlength = 40 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.LastName)
                        </div>
                    </div>

                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.Email)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.Email, new { @class = " form-control", maxlength = 50, autocomplete = "off" })
                        </div>
                        <div class="col-md-5 paddingError " id="EmailError">
                            <div class="col-md-1" id="EmailValidationLoading" style="display: none">
                                <img id="loading-image" src="~/Content/Images/loading-small.gif" alt="Loading..." />
                            </div>
                            <span id="EmailErrortext"></span>
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>

                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.Password)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            <span id="passwordTipso" class="padding-top-header"></span>
                            @Html.PasswordFor(m => m.Password, new { @class = " form-control", value = Model.Password, maxlength = 15, autocomplete = "off" })
                        </div>
                        <div class="col-md-5 col-sm-5 paddingError">
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>

                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.ConfirmPassword)
                          
                        </div>
                        <div class="col-md-7 col-sm-7">
                            <span id="cnfrmPasswordTipso" class="padding-top-header"></span>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = " form-control", value = Model.ConfirmPassword, maxlength = 15 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                    </div>

                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.OrganisationName, new { @style = "display:initial" })
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.DummyOrganisationName, new { @class = " form-control organisation", maxlength = 100 })
                        </div>
                        <div class="col-md-5 paddingError " id="DummyOrganisationError">
                            <div class="col-md-1" id="DummyOrganisationValidationLoading" style="display: none">
                                <img id="loading-image" src="~/Content/Images/loading-small.gif" alt="Loading..." />
                            </div>
                            <span id="DummyOrganisationErrorText"></span>
                            @Html.ValidationMessageFor(m => m.DummyOrganisationName)
                        </div>
                    </div>

                    <div class="col-md-7 col-sm-7 padding-top-question">
                        @Html.CheckBoxFor(m => m.IsEmplyeeOfCompany) @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.IS_EMPLOYEE_OF_COMPANY, userCulture).ToString()
                        <input type="hidden" value="false" name="IsEmplyeeOfCompany" />
                    </div>

                    <div class="col-md-7 col-sm-7 padding-top-question">
                        @Html.CheckBoxFor(m => m.IsAgreeOnTerms) @Html.Raw(PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.IS_AGREE_ON_TERMS, userCulture).ToString())
                        <input type="hidden" value="false" name="IsAgreeOnTerms" />
                    </div>

                    <input type="hidden" id="CampaignId" value="0"/>
                    <input type="hidden" id="CampaignSupplierId" value="0"/>
                    @*<input type="hidden" id="IsFITMappedToBuyer" value="0"/>
                    <input type="hidden" id="IsHSMappedToBuyer" value="0"/>
                    <input type="hidden" id="IsDSMappedToBuyer" value="0"/>*@                    

                </div>
                <div class="row padding-top-question col-md-3  col-sm-3 col-xs-5" style="padding-top: 40px; width: 100%;">
                    <button id="submitUserDetails" class="col-md-3 btn btn-color" type="button">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEXT, userCulture).ToString() </button>
                </div>
                @*<div class="col-md-3  col-sm-3 col-xs-5">
                        <button class="col-md-7 btn btn-color" data-issave="false" id="submitCompanyDetails">Next</button>
                    </div>*@
            </div>
            <div class="col-md-4 hidden-sm hidden-xs ">
                @*@{if (isCampaignPage && Session[PRGX.SIMTrax.Domain.Util.Constants.SESSION_CAMPAIGN_LOGO] != null)
                 {
                     <div class="container-white-backgound" style="margin-bottom: 20px;">
                         <div class="give-max-width text-align-center">
                             <img src="data:;base64,@Session[PRGX.SIMTrax.Domain.Util.Constants.SESSION_CAMPAIGN_LOGO].ToString()" class="img-logo-login" width="260" id="imgCampaignLogoHeader" />
                         </div>
                     </div>
                 }
                 }*@
                <div class="container-white-backgound">
                    <div class="cnt-us-mar-btm">
                        <div class="col-md-12 padding-bottom">
                            <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEED_HELP_CONTACT_US, userCulture).ToString()</span>
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>

                    <div class="row col-md-12">
                        <br />
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3 fa fa-envelope fa-opacity fa-3x  col-md-offset-1 col-sm-offset-1 col-xs-offset-1">
                        </div>
                        <div class="col-md-8 col-sm-7 col-xs-7">

                            <div class="contact-panel-text-color">
                                <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_US, userCulture).ToString()</b>
                            </div>
                            <a href="mailto:@HttpContext.Current.Application["ContactEmail"]" target="_blank">
                                <span>@HttpContext.Current.Application["ContactEmail"]</span>
                            </a>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  fa fa-phone fa-3x padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                        </div>
                        <div class="col-md-8 col-sm-7 col-xs-7 padding-top">
                            <div class="contact-panel-text-color">
                                <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CALL_US, userCulture).ToString()</b>
                            </div>
                            <span>@HttpContext.Current.Application["ContactNo"]</span>
                        </div>

                    </div>
                    <div class="row col-md-12">
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                            <img style="width:42px" src="~/Content/Images/FAQ.png" />

                         </div>
                        <div class="col-md-8 col-sm-7 col-xs-7" style="padding-top:18px;">
                            <b><a class="contact-panel-text-color hoverLink" style="cursor: pointer;" target="FAQ" href="/FAQ">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.READ_OUR_FAQS, userCulture).ToString()</a></b>
                         </div>

                    </div>

                </div>
            </div>
        </div>
        <div id="CompanyDetails" style="display: none; width: 100%; float: left">

            <div class=" col-md-8 col-sm-12 col-xs-12">
                <div class="container-white-backgound" style="padding-left: 15px; padding-right: 15px">
                    <div class="col-md-12 padding-bottom">
                        <span class="page-sub-heading ">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.STEP_2_OF_4, userCulture).ToString() : @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.GENERAL_INFORMATION, userCulture).ToString()</span>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>
                    <div class="col-md-12 padding-division-header">
                        <span class="heading-block font-bold">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SUPPLIER_DETAILS, userCulture).ToString()</span>
                    </div>
                    <div class="col-md-12 col-md-12 col-sm-12 col-xs-12 padding-top-question">
                        @Html.LabelFor(m => m.OrganisationName, new { @style = "display:initial" })
                        <a class="profile-tooltip-remove" >
                            <i class="fa fa-info-circle"></i>
                        </a>
                    </div>
                    <div class="col-md-7 col-sm-7">
                        @Html.TextBoxFor(m => m.OrganisationName, new { @class = " form-control", maxlength = 100 })
                    </div>
                    <div class="col-md-5 paddingError " id="OrganisationError">
                        <div class="col-md-1" id="OrganisationValidationLoading" style="display: none">
                            <img id="loading-image" src="~/Content/Images/loading-small.gif" alt="Loading..." />
                        </div>
                        <span id="OrganisationErrorText"></span>
                        @Html.ValidationMessageFor(m => m.OrganisationName)
                    </div>
                    <div class="padding-top-question ">
                        <div class="col-md-12 col-md-12 col-sm-12 col-xs-12">
                            @Html.LabelFor(m => m.Trading)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.Trading, new { @class = " form-control", maxlength = 100 })
                        </div>
                    </div>
                    <div class="padding-top-question ">
                        <div class="col-md-12 col-md-12 col-sm-12 col-xs-12">
                            @Html.LabelFor(m => m.TypeOfCompany)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.DropDownListFor(m => m.TypeOfCompany, Model.CompanyTypeList, new { @class = " form-control" })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.TypeOfCompany)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            @Html.LabelFor(m => m.IsSubsidaryStatus)
                        </div>
                        <div class=" padding-top">
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.IsSubsidaryStatus, false, new { Checked = "checked" }) <span id="IsSubsidaryStatusParent">Parent</span>
                            </div>
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.IsSubsidaryStatus, true) <span id="IsSubsidaryStatusSubsidary">Subsidiary</span>
                            </div>
                        </div>
                        @{var displaySubsidary = Model.IsSubsidaryStatus == true ? "block" : "none";}
                        <div id="ifSubsidary" style="display: @displaySubsidary" class="padding-Left padding-top-question">
                            <div class="col-md-8">
                                @Html.LabelFor(m => m.UltimateParent)
                            </div>

                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.UltimateParent, new { @class = " form-control", maxlength = 100 })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="UltimateParentError" style="display: none;">
                                Enter the  Parent Name
                            </div>

                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    @Html.LabelFor(m => m.ParentDunsNumber)
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    @Html.TextBoxFor(m => m.ParentDunsNumber, new { @class = " form-control", maxlength = 40 })
                                </div>
                                <div class="col-md-5  paddingError error-text" id="ParentDunsNumberError" style="display: none;">
                                    Enter the  Parent DUNS Number
                                </div>
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @Html.LabelFor(m => m.CompanyRegistrationNumber)
                                <a class="profile-tooltip-remove" >
                                    <i class="fa fa-info-circle"></i>
                                </a>
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.CompanyRegistrationNumber, new { @class = " form-control", maxlength = 40 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-8 col-sm-12 col-xs-12">
                                @Html.LabelFor(m => m.CompanyYear)
                            </div>

                            <div class="col-md-7 col-sm-7">
                                <select id="CompanyYear" name="CompanyYear" class=" form-control"></select>
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @Html.LabelFor(m => m.IsVAT)
                                <a class="profile-tooltip-remove" data-width="380" >
                                    <i class="fa fa-info-circle"></i>
                                </a>
                            </div>
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.IsVAT, true) <span id="IsVATTrue">Yes</span>
                            </div>
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.IsVAT, false) <span id="IsVATFalse">No</span>
                            </div>
                        </div>
                        @{var displayVat = String.IsNullOrEmpty(Model.VATNumber) ? "none" : "block";}
                        <div id="HaveVAT" style="display: @displayVat" class="padding-Left">
                            <div class="row padding-top-question">
                                <div class="col-md-12">
                                    @Html.LabelFor(m => m.VATNumber)
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    @Html.TextBoxFor(m => m.VATNumber, new { @class = " form-control", maxlength = 40 })
                                </div>
                                <div class="col-md-5  paddingError error-text " id="VATNumberError" style="display: none;">
                                    @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.VAT_NUMBER_ERROR, userCulture).ToString()
                                </div>
                            </div>
                            @*<div class="padding-top-question">
                                    <div class="col-md-9">
                                        @Html.LabelFor(m => m.W9W8Form)
                                    </div>
                                    <div class="col-md-7 col-sm-7">
                                        @Html.TextBoxFor(m => m.W9W8Form, new { type = "file", onchange = " ValidateForm()" })
                                    </div>
                                    <div class="col-md-7  paddingError error-text" id="W9W8FormError" style="display: none;">
                                        Upload the Form
                                    </div>
                                </div>*@
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @Html.LabelFor(m => m.HaveDuns)
                                <a class="profile-tooltip-remove" >
                                    <i class="fa fa-info-circle"></i>
                                </a>
                            </div>
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.HaveDuns, true) <span id="IsDUNSTrue">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.YES, userCulture).ToString()</span>
                            </div>
                            <div class="col-md-2 col-sm-4">
                                @Html.RadioButtonFor(m => m.HaveDuns, false) <span id="IsDUNSFalse">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NO, userCulture).ToString()</span>
                            </div>
                        </div>
                        @{var displayDUNS = String.IsNullOrEmpty(Model.DUNSNumber) ? "none" : "block";}
                        <div id="HaveDUNSNumber" style="display: @displayDUNS;" class="padding-Left">
                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    @Html.LabelFor(m => m.DUNSNumber)
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    @Html.TextBoxFor(m => m.DUNSNumber, new { @class = " form-control", maxlength = 40 })
                                </div>
                                <div class="col-md-5  paddingError error-text" id="DUNSNumberError" style="display: none;">
                                    Enter DUNS Number
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 hidden-sm hidden-xs">
                <div class="container-white-backgound">
                    <div class="cnt-us-mar-btm">
                        <div class="col-md-12 padding-bottom">
                            <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEED_HELP_CONTACT_US, userCulture).ToString()</span>
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>

                    <div class="row col-md-12">
                        <br />
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3 fa fa-envelope fa-opacity fa-3x  col-md-offset-1 col-sm-offset-1 col-xs-offset-1">
                        </div>
                        <div class="col-md-8 col-sm-7 col-xs-7">

                            <div class="contact-panel-text-color">
                                <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_US, userCulture).ToString()</b>
                            </div>
                            <a href="mailto:@HttpContext.Current.Application["ContactEmail"]" target="_blank">
                                <span>@HttpContext.Current.Application["ContactEmail"]</span>
                            </a>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  fa fa-phone fa-3x padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                        </div>
                        <div class="col-md-8 col-sm-7 col-xs-7 padding-top">
                            <div class="contact-panel-text-color">
                                <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CALL_US, userCulture).ToString()</b>
                            </div>
                            <span>@HttpContext.Current.Application["ContactNo"]</span>
                        </div>

                    </div>
                    <div class="row col-md-12 col-sm-12 col-xs-12">
                        <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                            <img style="width:42px" src="~/Content/Images/FAQ.png" />

                        </div>
                        <div class="col-md-8 col-sm-7 col-xs-7" style="padding-top:18px;">
                            <b><a class="contact-panel-text-color hoverLink" style="cursor: pointer;" target="FAQ" href="/FAQ">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.READ_OUR_FAQS, userCulture).ToString()</a></b>
                        </div>

                    </div>

                </div>
            </div>

            <div class=" col-md-8 col-sm-12 col-xs-12 container-separtor">
                <div class="container-white-backgound" style="padding-left: 15px; padding-right: 15px">
                    <div class="col-md-12 padding-bottom">
                        <span class="page-sub-heading ">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.ADDRESSES, userCulture).ToString()</span>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>
                    <div class=" padding-division-header">
                        <div class="col-md-12" style="font-weight: bold">
                            <span class="heading-block font-bold">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SUPPLIER_ADDRESS, userCulture).ToString()</span>
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressLine1)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstAddressLine1, new { @class = " form-control", maxlength = 100 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.FirstAddressLine1)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressLine2)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstAddressLine2, new { @class = " form-control", maxlength = 100 })
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressCity)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstAddressCity, new { @class = " form-control", maxlength = 50 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.FirstAddressCity)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressState)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstAddressState, new { @class = " form-control", maxlength = 50 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.FirstAddressState)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressPostalCode)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.TextBoxFor(m => m.FirstAddressPostalCode, new { @class = " form-control", maxlength = 15 })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.FirstAddressPostalCode)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.FirstAddressCountry)
                        </div>
                        <div class="col-md-7 col-sm-7">
                            @Html.DropDownListFor(m => m.FirstAddressCountry, Model.CountryList, new { @class = " form-control" })
                        </div>
                        <div class="col-md-5 paddingError">
                            @Html.ValidationMessageFor(m => m.FirstAddressCountry)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12 col-sm-12 col-xs-12" >
                            @Html.LabelFor(m => m.IsAddressDifferent)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsAddressDifferent, true) <span id="IsSameAddressTrue">Yes</span>
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsAddressDifferent, false, new { Checked = "checked" }) <span id="IsSameAddressFalse">No</span>
                        </div>
                    </div>
                    <div id="ifDifferentAddress" style="display: none;" class="padding-Left">
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressLine1)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.SecondAddressLine1, new { @class = " form-control", maxlength = 100 })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="SecondAddressLine1Error" style="display: none;">
                                Enter the Address
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressLine2)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.SecondAddressLine2, new { @class = " form-control", maxlength = 100 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressCity)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.SecondAddressCity, new { @class = " form-control", maxlength = 50 })
                            </div>
                            <div class="col-md-5 paddingError error-text" id="SecondAddressCityError" style="display: none;">
                                Enter the City
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressState)
                            </div>

                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.SecondAddressState, new { @class = " form-control", maxlength = 50 })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="SecondAddressStateError" style="display: none;">
                                Enter the Address
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressPostalCode)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.SecondAddressPostalCode, new { @class = " form-control", maxlength = 15 })
                            </div>
                            <div class="col-md-5 paddingError  error-text" id="SecondAddressPostalCodeError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.POSTAL_ZIPCODE_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.SecondAddressCountry)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.DropDownListFor(m => m.SecondAddressCountry, Model.CountryList, new { @class = " form-control" })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="SecondAddressCountryError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.COUNTRY_ERROR, userCulture).ToString()
                            </div>
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.IsHeadQuartersAddressDifferent)
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsHeadQuartersAddressDifferent, true) <span id="IsSameAddressTrue">Yes</span>
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsHeadQuartersAddressDifferent, false, new { Checked = "checked" }) <span id="IsSameAddressFalse">No</span>
                        </div>
                    </div>
                    <div id="ifHeadQuarterDifferentAddress" style="display:none;" class="padding-Left">
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressLine1)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.HeadQuartersAddressLine1, new { @class = " form-control", maxlength = 100 })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="HeadQuarterAddressLine1Error" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.ADDRESS_LINE_1_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressLine2)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.HeadQuartersAddressLine2, new { @class = " form-control", maxlength = 100 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressCity)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.HeadQuartersAddressCity, new { @class = " form-control", maxlength = 50 })
                            </div>
                            <div class="col-md-5 paddingError error-text" id="HeadQuarterAddressCityError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CITY_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressState)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.HeadQuartersAddressState, new { @class = " form-control", maxlength = 50 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressPostalCode)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.HeadQuartersAddressPostalCode, new { @class = " form-control", maxlength = 15 })
                            </div>
                            <div class="col-md-5 paddingError  error-text" id="HeadQuarterAddressPostalCodeError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.POSTAL_ZIPCODE_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.HeadQuartersAddressCountry)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.DropDownListFor(m => m.HeadQuartersAddressCountry, Model.CountryList, new { @class = " form-control" })
                              </div>
                            <div class="col-md-5  paddingError error-text" id="HeadQuarterAddressCountryError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.COUNTRY_ERROR, userCulture).ToString()
                            </div>
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.IsRemittanceAddressDifferent)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsRemittanceAddressDifferent, true) <span id="IsSameAddressTrue">Yes</span>
                        </div>
                        <div class="col-md-2 col-sm-4">
                            @Html.RadioButtonFor(m => m.IsRemittanceAddressDifferent, false, new { Checked = "checked" }) <span id="IsSameAddressFalse">No</span>
                        </div>
                    </div>
                    <div id="ifRemittanceDifferentAddress" class="padding-Left" style="display: none">
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressLine1)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.RemittanceAddressLine1, new { @class = " form-control", maxlength = 100 })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="RemittanceAddressLine1Error" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.ADDRESS_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressLine2)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.RemittanceAddressLine2, new { @class = " form-control", maxlength = 100 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressCity)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.RemittanceAddressCity, new { @class = " form-control", maxlength = 50 })
                            </div>
                            <div class="col-md-5 paddingError error-text" id="RemittanceAddressCityError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CITY_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressState)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.RemittanceAddressState, new { @class = " form-control", maxlength = 50 })
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressPostalCode)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => m.RemittanceAddressPostalCode, new { @class = " form-control", maxlength = 15 })
                            </div>
                            <div class="col-md-5 paddingError  error-text" id="RemittanceAddressPostalCodeError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.POSTAL_ZIPCODE_ERROR, userCulture).ToString()
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.RemittanceAddressCountry)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.DropDownListFor(m => m.RemittanceAddressCountry, Model.CountryList, new { @class = " form-control" })
                            </div>
                            <div class="col-md-5  paddingError error-text" id="RemittanceAddressCountryError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.COUNTRY_ERROR, userCulture).ToString()
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 container-separtor">
                <div class="container-white-backgound" style="padding-left: 15px; padding-right: 15px">
                    <div class="padding-division-header">
                        <div class="col-md-12 padding-bottom">
                            <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CAPABILITIES, userCulture).ToString()</span>
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <hr class="border-style" />
                    </div>

                    <div class=" padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.NumberOfEmployees)
                        </div>
                        <div class="col-md-5 col-sm-7">
                            @Html.DropDownListFor(m => m.NumberOfEmployees, Model.NoOfEmployeesList, new { @class = " form-control" })
                        </div>
                        <div class="col-md-5  paddingError">
                            @Html.ValidationMessageFor(m => m.NumberOfEmployees)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12 col-sm-12 col-xs-12" >
                            @Html.LabelFor(m => m.TurnOver)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                        </div>
                        <div class="col-md-5 col-sm-7">
                            @Html.DropDownListFor(m => m.TurnOver, Model.TurnOverList, new { @class = " form-control" })
                        </div>
                        <div class="col-md-5  paddingError">
                            @Html.ValidationMessageFor(m => m.TurnOver)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12 col-sm-12 col-xs-12"  >
                            @Html.LabelFor(m => m.sector)
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                            <div>
                                @Html.ValidationMessageFor(m => m.sector)
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="col-md-6 col-sm-6 col-xs-12" style="padding: 0px">
                                @for (int i = 1; i <= Model.BusinessSectorList.Count / 2; i++)
                                {
                                    <div class="col-md-6 col-sm-6 col-xs-12"></div>
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        @Html.RadioButtonFor(p => Model.sector, Model.BusinessSectorList[i - 1].Value, new { @onclick = "ShowHideDescription('hide')" })
                                        @Html.DisplayFor(p => Model.BusinessSectorList[i - 1].Text)
                                        <a class="tooltip-remove" data-description="@Model.BusinessSectorList[i - 1].Description" ><i class="fa fa-info-circle"></i></a>
                                    </div>
@*onmouseover="ShowDescriptionToolTip(this,'@Model.BusinessSectorList[i - 1].Description')" onmouseout="HideToolTip(this)"*@
                                }
                            </div>
                            <div class="col-md-6 col-sm-6 col-xs-12" style="padding: 0px">
                                @for (int i = (Model.BusinessSectorList.Count / 2 + 1); i <= Model.BusinessSectorList.Count; i++)
                                {
                                    <div class="col-md-6 col-sm-6 col-xs-12"></div>
                                    if (Model.BusinessSectorList[i - 1].Text != "Not Sure")
                                    {
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        @Html.RadioButtonFor(p => Model.sector, Model.BusinessSectorList[i - 1].Value, new { @onclick = "ShowHideDescription('hide')" })
                                        @Html.DisplayFor(p => Model.BusinessSectorList[i - 1].Text)
                                        <a class="tooltip-remove" data-description="@Model.BusinessSectorList[i - 1].Description" ><i class="fa fa-info-circle"></i></a>
                                    </div>
                                    }
                                }
                            </div>
                            @for (int i = 1; i <= Model.BusinessSectorList.Count; i++)
                            {
                                if (Model.BusinessSectorList[i - 1].Text == "Not Sure")
                                {
                                <div class="col-md-12">
                                    @Html.RadioButtonFor(p => Model.sector, Model.BusinessSectorList[i - 1].Value, new { @onclick = "ShowHideDescription('show')", @id = "rdoBSNotSure" })
                                    @Html.DisplayFor(p => Model.BusinessSectorList[i - 1].Text)
                                    <a class="tooltip-remove" data-description="@Model.BusinessSectorList[i - 1].Description" ><i class="fa fa-info-circle"></i></a>
                                </div>
                                <div class="col-md-12 padding-top-10px" style="display: none" id="divsectorDescription">
                                    <div class="col-md-12">
                                        <label>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.DESCRIPTION, userCulture).ToString()</label>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(elem => Model.BusinessSectorDescription, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                }
                            }
                        </div>

                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.CustomerSectorList, new { @class = "required" })
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                            <div class="paddingError error-text" id="CustomerSectorListError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_AT_LEAST_ONE_CATEGORY, userCulture).ToString()
                            </div>
                            
                        </div>
                        <div class="col-md-12 col-sm-12">
                            <div class="col-md-12">
                                1.
                                <label id="lblSIC1"></label>
                                <a id="lnkTree1" onclick="SelectSicCode(1)" class="SICCodeLink">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</a>
                                <a id="lnkSIC1" style="display: none" onclick="EditSicCode(1)">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EDIT, userCulture).ToString()</a>
                                @Html.HiddenFor(m => m.SIC1)
                            </div>
                            <div class="col-md-12">
                                2.
                                <label id="lblSIC2"></label>
                                <a id="lnkTree2" onclick="SelectSicCode(2)" class="SICCodeLink">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</a>
                                <a id="lnkSIC2" style="display: none" onclick="EditSicCode(2)">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EDIT, userCulture).ToString()</a>
                                @Html.HiddenFor(m => m.SIC2)
                            </div>
                            <div class="col-md-12">
                                3.
                                <label id="lblSIC3"></label>
                                <a id="lnkTree3" onclick="SelectSicCode(3)" class="SICCodeLink">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</a>
                                <a id="lnkSIC3" style="display: none" onclick="EditSicCode(3)">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EDIT, userCulture).ToString()</a>
                                @Html.HiddenFor(m => m.SIC3)
                            </div>
                            <div class="col-md-12">
                                4.
                                <label id="lblSIC4"></label>
                                <a id="lnkTree4" onclick="SelectSicCode(4)" class="SICCodeLink">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</a>
                                <a id="lnkSIC4" style="display: none" onclick="EditSicCode(4)">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EDIT, userCulture).ToString()</a>
                                @Html.HiddenFor(m => m.SIC4)
                            </div>
                            <div class="col-md-12">
                                5.
                                <label id="lblSIC5"></label>
                                <a id="lnkTree5" onclick="SelectSicCode(5)" class="SICCodeLink">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</a>
                                <a id="lnkSIC5" style="display: none" onclick="EditSicCode(5)">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EDIT, userCulture).ToString()</a>
                                @Html.HiddenFor(m => m.SIC5)
                            </div>
                            <input type="hidden" id="hdnCurrentSIC" value="" />
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.GeoGraphicSalesList, new { @class = "required" })
                            <a class="profile-tooltip-remove" >
                                <i class="fa fa-info-circle"></i>
                            </a>
                            <div class="paddingError error-text" id="geoGraphicSaleListError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_AT_LEAST_ONE_GEOGRAPHIC_REGION, userCulture).ToString()
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12">
                            @for (int i = 1; i <= Model.GeoGraphicSalesList.Count; i++)
                            {
                                if (i == 1)
                                {

                                <div class="col-md-12 GeoGraphicSalesListValidate No-geo-sales" style="padding-bottom: 10px">
                                    @Html.CheckBoxFor(p => Model.GeoGraphicSalesList[i - 1].Selected, Model.GeoGraphicSalesList[i - 1].Value)
                                    @Html.DisplayFor(p => Model.GeoGraphicSalesList[i - 1].Text)
                                    @Html.HiddenFor(p => Model.GeoGraphicSalesList[i - 1].Value)

                                </div>
                                }
                                else
                                {
                                    <div class="col-md-6 GeoGraphicSalesListValidate Other-geo-sales" style="padding-left: 30px">
                                        @Html.CheckBoxFor(p => Model.GeoGraphicSalesList[i - 1].Selected, Model.GeoGraphicSalesList[i - 1].Value)
                                        @Html.DisplayFor(p => Model.GeoGraphicSalesList[i - 1].Text)
                                        @Html.HiddenFor(p => Model.GeoGraphicSalesList[i - 1].Value)
                                    </div>
                                }
                            }
                          
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.GeoGraphicSuppList, new { @class = "required" })
                            <a class="profile-tooltip-remove">
                                <i class="fa fa-info-circle"></i>
                            </a>
                            <div class="paddingError error-text" id="geoGraphicSuppListError" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_AT_LEAST_ONE_GEOGRAPHIC_REGION, userCulture).ToString()
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12">
                            @for (int i = 1; i <= Model.GeoGraphicSuppList.Count; i++)
                            {
                                if (i == 1)
                                {
                                <div class="col-md-12 GeoGraphicSuppListValidate No-geo-supp" style="padding-bottom: 10px">
                                    @Html.CheckBoxFor(p => Model.GeoGraphicSuppList[i - 1].Selected, Model.GeoGraphicSuppList[i - 1].Value)
                                    @Html.DisplayFor(p => Model.GeoGraphicSuppList[i - 1].Text)
                                    @Html.HiddenFor(p => Model.GeoGraphicSuppList[i - 1].Value)
                                </div>
                                }
                                else {
                                      <div class="col-md-6 GeoGraphicSuppListValidate Other-geo-supp" style="padding-left: 30px">
                                @Html.CheckBoxFor(p => Model.GeoGraphicSuppList[i - 1].Selected, Model.GeoGraphicSuppList[i - 1].Value)
                                @Html.DisplayFor(p => Model.GeoGraphicSuppList[i - 1].Text)
                                @Html.HiddenFor(p => Model.GeoGraphicSuppList[i - 1].Value)
                            </div> 
                                }

                            }
                           
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.MaxContractValue)
                        </div>
                        <div class="col-md-5 col-sm-7">
                            <div class=" input-group">
                                <span class="input-group-addon">£</span>
                                @Html.TextBoxFor(m => m.MaxContractValue, new { @class = " form-control currency", maxlength = 25 })
                            </div>
                        </div>
                        <div class="col-md-5 paddingError ">
                            @Html.ValidationMessageFor(m => m.MaxContractValue)
                        </div>
                    </div>
                    <div class="padding-top-question">
                        <div class="col-md-12">
                            @Html.LabelFor(m => m.MinContractValue)
                        </div>
                        <div class="col-md-5 col-sm-7">
                            <div class=" input-group">
                                <span class="input-group-addon">£</span>
                                @Html.TextBoxFor(m => m.MinContractValue, new { @class = " form-control currency", maxlength = 25 })
                            </div>
                        </div>
                        <div class="col-md-5 paddingError ">
                            @Html.ValidationMessageFor(m => m.MinContractValue)
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="col-md-12 container-separtor">
                    <div class="container-white-backgound">
                        <div class="padding-division-header">
                            <div class="col-md-5 padding-bottom">

                                <span class="page-sub-heading" id="spDiversityStatus">Diversity Status</span>
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <hr class="border-style" />
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12 required">
                                @Html.LabelFor(m => m.FirmStatus)
                            </div>
                            <div class="col-md-12  paddingError error-text" id="firmStatusError" style="display: none;">
                                Select the Firm Status
                            </div>
                            <div class="col-md-12 col-sm-12">
                                @for (int i = 1; i <= Model.USFirmsStatusList.Count; i++)
                                {

                                    <div class="col-md-12 padding-top">
                                        <div class="col-md-4">
                                            @Html.CheckBoxFor(p => Model.CompanyFirmStatusVM[i - 1].IsSelected, Model.USFirmsStatusList[i - 1].Value)
                                            <input type="hidden" value="false" name="CompanyFirmStatusVM[@(i - 1)].IsSelected" />
                                            @Html.DisplayFor(p => Model.USFirmsStatusList[i - 1].Text)
                                            @Html.HiddenFor(p => Model.USFirmsStatusList[i - 1].Value)
                                            @Html.HiddenFor(p => Model.CompanyFirmStatusVM[i - 1].FirmStatusId)
                                            @Html.HiddenFor(p => Model.CompanyFirmStatusVM[i - 1].SelectedStates)
                                        </div>
                                        <div class="col-md-8">
                                            @if (i != Model.USFirmsStatusList.Count)
                                            {
                                                <div id="statesDiv-@(i - 1)" style="display:none;">
                                                    <div class="row">
                                                        <div class="col-md-3" style="font-weight: bold">
                                                            Select  States :
                                                        </div>
                                                        <div class="col-md-5">
                                                            <select id="ddlStates-@(i - 1)" multiple="multiple" class="states form-control">
                                                                @for (int index = 0; index < Model.USStatesList.Count; index++)
                                                                {
                                                                    <option value="@Model.USStatesList[index].Value">@Model.USStatesList[index].Text</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="col-md-4  paddingError error-text" id="StateSelectionError-@(i - 1)" style="display:none;">
                                                            @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.STATES_ERROR, userCulture).ToString()
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>*@
         
            <div class="padding-top margin-before-footer" style="float: left; width: 100%; margin-top: 40px">
              
                <div class="col-md-3  col-sm-3 col-xs-5">
                    <button class="col-md-7 btn btn-color" data-issave="false" id="submitCompanyDetails" type="button">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEXT, userCulture).ToString()</button>
                </div>
            </div>
        </div>
    </form>
    <div id="ContactDetails" style="display: none;">

        <div class="col-md-8 col-sm-12 col-xs-12">
            <div class="container-white-backgound margin-before-footer" style="padding-left: 15px; padding-right: 15px">
                <form id="contactForm">
                    @Html.HiddenFor(m => m.SellerPartyId, new { id = "ContactSellerPartyId" })
                    @for (var i = 0; i < Model.ContactDetails.Count; i++)
                    {
                        <div class="contact-details-form">
                        @Html.HiddenFor(m => Model.ContactDetails[i].ContactId)
                            @Html.HiddenFor(m => Model.ContactDetails[i].ContactType)
                        <div class="padding-division-header">
                            <div class="col-md-12" style="font-weight: bold">
                                @switch (Model.ContactDetails[i].ContactType)
                                {
                                    case PRGX.SIMTrax.Domain.Util.ContactType.Accounts:
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.ACCOUNTS_FINANCE_REMITTANCE_CONTACT, userCulture).ToString()
                                        break;
                                    case PRGX.SIMTrax.Domain.Util.ContactType.HS:
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.HS_CONTACT, userCulture).ToString()
                                        break;
                                    case PRGX.SIMTrax.Domain.Util.ContactType.Primary:
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SALES_CONTACT_PRIMARY, userCulture).ToString()
                                        break;
                                    case PRGX.SIMTrax.Domain.Util.ContactType.Procurement:
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PROCUREMENT_CONTACT, userCulture).ToString()
                                        break;
                                    case PRGX.SIMTrax.Domain.Util.ContactType.Sustainability:
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SUSTAINABILITY_CONTACT, userCulture).ToString()
                                        break;
                                }
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12" style="font-weight: bold">
                                @Html.LabelFor(m => Model.ContactDetails[i].FirstName):
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => Model.ContactDetails[i].FirstName, new { @class = " form-control contacts-first-name", placeholder = @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.FIRST_NAME_PLACEHOLDER, userCulture).ToString(), maxlength = 40 })
                            </div>
                        </div>
                        <div class=" padding-top-question">
                            <div class="col-md-12" style="font-weight: bold">
                                @Html.LabelFor(m => Model.ContactDetails[i].LastName):
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => Model.ContactDetails[i].LastName, new { @class = " form-control contacts-last-name", placeholder = @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.LAST_NAME_PLACEHOLDER, userCulture).ToString(), maxlength = 40 })
                            </div>
                        </div>

                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => Model.ContactDetails[i].Email)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => Model.ContactDetails[i].Email, new { @class = " form-control contacts-email", maxlength = 50, data_rowId = i })
                            </div>
                            <div class="col-md-5 paddingError  error-text" id="ContactsEmailError-@i" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_ERROR, userCulture).ToString()
                            </div>
                            <div class="col-md-5 paddingError">
                                @Html.ValidationMessageFor(m => Model.ContactDetails[i].Email)
                            </div>
                        </div>
                        <div class="padding-top-question">
                            <div class="col-md-12">
                                @Html.LabelFor(m => Model.ContactDetails[i].Telephone)
                            </div>
                            <div class="col-md-7 col-sm-7">
                                @Html.TextBoxFor(m => Model.ContactDetails[i].Telephone, new { @class = " form-control contacts-telephone", maxlength = 12, data_rowId = i })
                            </div>
                            <div class="col-md-5 paddingError  error-text" id="ContactsTelephoneError-@i" style="display: none;">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.TEL_NUMBER_ERROR, userCulture).ToString()
                            </div>
                            <div class="col-md-5 paddingError">
                                @Html.ValidationMessageFor(m => Model.ContactDetails[i].Telephone)
                            </div>
                        </div>
                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    @Html.LabelFor(m => Model.ContactDetails[i].JobTitle)
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    @Html.TextBoxFor(m => Model.ContactDetails[i].JobTitle, new { @class = " form-control", maxlength = 12, data_rowId = i })
                                </div>
                              
                            </div>
                        .
                        </div>
                    }

                </form>
            </div>
            <div class="row padding-division-header" style="padding-top: 40px; padding-bottom: 0px;">
                <div class="col-md-3 col-sm-4 col-xs-6">
                    <button class="col-md-12 btn btn-normal" id="backToCompanyDetails">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PREVIOUS, userCulture).ToString()</button>
                </div>
                <div class="col-md-3 col-sm-4 col-xs-6">
                    <button class="col-md-12 btn btn-color" id="contactDetailsSubmit" type="button">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SUBMIT_REGISTRATION, userCulture).ToString()</button>
                </div>

            </div>
        </div>

        <div class="col-md-4 hidden-sm hidden-xs ">
            <div class="container-white-backgound">
                <div class="cnt-us-mar-btm">
                    <div class="col-md-12 padding-bottom">
                        <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEED_HELP_CONTACT_US, userCulture).ToString()</span>
                    </div>
                </div>
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <hr class="border-style" />
                </div>

                <div class="row col-md-12">
                    <br />
                    <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3 fa fa-envelope fa-opacity fa-3x  col-md-offset-1 col-sm-offset-1 col-xs-offset-1">
                    </div>
                    <div class="col-md-8 col-sm-7 col-xs-7">

                        <div class="contact-panel-text-color">
                            <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_US, userCulture).ToString()</b>
                        </div>
                        <a href="mailto:@HttpContext.Current.Application["ContactEmail"]" target="_blank">
                            <span>@HttpContext.Current.Application["ContactEmail"]</span>
                        </a>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  fa fa-phone fa-3x padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                    </div>
                    <div class="col-md-8 col-sm-7 col-xs-7 padding-top">
                        <div class="contact-panel-text-color">
                            <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CALL_US, userCulture).ToString()</b>
                        </div>
                        <span>@HttpContext.Current.Application["ContactNo"]</span>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                        <img style="width:42px" src="~/Content/Images/FAQ.png" />

                    </div>
                    <div class="col-md-8 col-sm-7 col-xs-7" style="padding-top:18px;">
                        <b><a class="contact-panel-text-color hoverLink" style="cursor: pointer;" target="FAQ" href="/FAQ">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.READ_OUR_FAQS, userCulture).ToString()</a></b>
                    </div>

                </div>

            </div>
        </div>
    </div>
    @*<div id="userDetails" class="1"></div>*@
    <div class="col-md-4 hidden-md hidden-lg">
        <div class="container-white-backgound">
            <div class="cnt-us-mar-btm">
                <div class="col-md-12 padding-bottom">
                    <span class="page-sub-heading">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.NEED_HELP_CONTACT_US, userCulture).ToString()</span>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <hr class="border-style" />
            </div>

            <div class="row col-md-12 col-sm-12 col-xs-12">
                <br />
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3 fa fa-envelope fa-opacity fa-3x  col-md-offset-1 col-sm-offset-1 col-xs-offset-1">
                </div>
                <div class="col-md-8 col-sm-7 col-xs-7">

                    <div class="contact-panel-text-color">
                        <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_US, userCulture).ToString()</b>
                    </div>
                    <a href="mailto:@HttpContext.Current.Application["ContactEmail"]" target="_blank">
                        <span>@HttpContext.Current.Application["ContactEmail"]</span>
                    </a>
                </div>
            </div>
            <div class="row col-md-12 col-sm-12 col-xs-12">
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  fa fa-phone fa-3x padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                </div>
                <div class="col-md-8 col-sm-7 col-xs-7 padding-top">
                    <div class="contact-panel-text-color">
                        <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CALL_US, userCulture).ToString()</b>
                    </div>
                    <span>@HttpContext.Current.Application["ContactNo"]</span>
                </div>

            </div>
            <div class="row col-md-12 col-sm-12 col-xs-12">
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                    <img style="width:42px" src="~/Content/Images/FAQ.png" />

                </div>
                <div class="col-md-8 col-sm-7 col-xs-7" style="padding-top:18px;">
                    <b><a class="contact-panel-text-color hoverLink" style="cursor: pointer;" target="FAQ" href="/FAQ">Read our FAQ’s</a></b>
                </div>

            </div>

        </div>
    </div>
    <div id="SicCodeModal" aria-hidden="true" aria-labelledby="mySmallModalLabel" class="modal fade bs-example-modal-lg" role="dialog" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header SIC-modal-header-margin">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SELECT_SIC_CODE, userCulture).ToString()</h4>
                </div>
                <div class="modal-body" style="height: 500px; overflow-y: auto; overflow-x: hidden; margin-bottom: 25px;">
                    <div class="row col-md-6">
                        <input type="text" id="txtSearchSector" placeholder="@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.SEARCH_CATEGORY_PLACEHOLDER, userCulture).ToString()" class="form-control" />
                    </div>
                    <div class="row col-md-1">
                        <i class="fa fa-search" style="vertical-align: bottom; padding-left: 10px;"></i>
                    </div>
                    <div class="row col-md-5 padding-top-small">
                        <img id="imgProcessing" alt="searching" style="display: none" height="20px" src="../../Content/Images/ajax-loader.gif" />
                    </div>
                    <div class="row col-md-12" id="demoTree">
                    </div>
                    <input type="hidden" id="hdnSicId" />
                </div>
                @*<div class="modal-footer">
                        <button type="button" class="btn btn-color" data-dismiss="modal">Cancel</button>
                    </div>*@
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-md" data-backdrop="static" id="modelSectorDescription" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content col-md-12" style="min-height: 250px">
            <div class="modal-header">
                <div class="bootstrap-dialog-header">
                    <div class="bootstrap-dialog-close-button" style="display: block;">
                        <button class="close" data-dismiss="modal">×</button>
                    </div>
                    <div class="bootstrap-dialog-title">
                        <h4 id="headingForSectorDescription"></h4>
                    </div>
                </div>
            </div>
            <div class="modal-body row">
                <div class="row col-md-12 col-sm-12 col-xs-12">
                    <br />
                    <div class="col-md-8 col-sm-7 col-xs-7">
                        <span id="spnSectorDescription"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    var CompanyServiceGeoRegionList = (Model.CompanyServiceGeoRegions != null && Model.CompanyServiceGeoRegions.Count > 0) ? @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CompanyServiceGeoRegions)) : null;
    var CompanySalesGeoRegionList = (Model.CompanySalesGeoRegions != null && Model.CompanySalesGeoRegions.Count > 0) ? @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CompanySalesGeoRegions)) : null;
    var CompanyIndustryCodeList = (Model.CompanyIndustryCodes != null && Model.CompanyIndustryCodes.Count > 0) ? @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CompanyIndustryCodes)) : null;
    var showDifferentAddress = Model.IsAddressDifferent;
    var showHeadQuarterAddress = Model.IsHeadQuartersAddressDifferent;
    var showRemittanceAddress = Model.IsRemittanceAddressDifferent;
    var establishedYear = Model.CompanyYear;
}
<script>
    var passwordTipsoText = '@Html.Raw(PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PASSWORD_TIPSO_MESSAGE, userCulture).ToString())';
    var industryErrorText = '@Html.Raw(PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.ENTER_INDUSTRY_SECTOR, userCulture).ToString())';
    var readAndAgreeToTermsAndCondition = '@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PLEASE_READ_AND_AGREE_TO_THE_TERMS_AND_CONDITIONS, userCulture).ToString()';

    $(".tooltip-remove").hover(function () {
        var desc = $(this).attr("data-description");
        if (desc != undefined) {
            $(this).tipso('update', 'content', desc);
            $(this).tipso('update', 'background', '#FF9933');
            $(this).tipso('show');
        }
    }, function () {

        $(this).tipso('hide');
        $(this).tipso('remove');
        $(this).tipso('destroy');
    }
);

    var customerSectorCount = parseInt('@Model.CustomerSectorList.Count');
    var geoGraphicSalesCount = parseInt('@Model.GeoGraphicSalesList.Count');
    var geoGraphicSuppCount = parseInt('@Model.GeoGraphicSuppList.Count');
    var checked_ids = [], parent_Ids = [], isOpenEvent = false;
    var isCompanyDetailsSubmitted = !('@Model.TurnOver' === '0');
    var isLoggedInUser = ('@isValidUser'.toLowerCase() === 'true');
    var CompanyServiceGeoRegionList = ('@CompanyServiceGeoRegionList' != "") ? jQuery.parseJSON('@CompanyServiceGeoRegionList') : "";
    var CompanySalesGeoRegionList = ('@CompanySalesGeoRegionList' != "") ? jQuery.parseJSON('@CompanySalesGeoRegionList') : "";
    var CompanyIndustryCodeList = ('@CompanyIndustryCodeList' != "") ? jQuery.parseJSON('@CompanyIndustryCodeList') : "";
    var showDifferentAddress = ('@showDifferentAddress'.toLowerCase() === 'true');
    var showHeadQuarterAddress = ('@showHeadQuarterAddress'.toLowerCase() === 'true');
    var showRemittanceAddress = ('@showRemittanceAddress'.toLowerCase() === 'true');
    var establishedYear = ('@establishedYear');

    //function ShowDescriptionModel(e, description) {
    //    $(".tooltip-remove").tipso('hide');
    //    $(e).tipso('update', 'content', description);
    //    $(e).tipso('update', 'background', 'rgb(248, 248, 248)');
    //    $(e).tipso('update', 'color', 'rgb(0, 0, 0)');
    //    $(e).tipso('show');
    //}

    //function HideToolTip(e) {

    //    $(e).tipso('hide');
    //}

    function ShowHideDescription(command) {

        if (command == "show") {
            $("#divsectorDescription").show();
        }
        else {
            $("#divsectorDescription").hide();
        }
    }


</script>
@Scripts.Render("~/bundles/AES")
<script src="~/Content/Scripts/jquery.jstree.js"></script>
@*@Scripts.Render("~/bundles/multiselects")*@
@Scripts.Render("~/bundles/SupplierRegister")
