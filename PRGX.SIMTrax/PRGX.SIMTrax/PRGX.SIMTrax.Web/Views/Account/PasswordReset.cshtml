@model PRGX.SIMTrax.ViewModel.ResetPassword

@{
    var userCulture = (Session[PRGX.SIMTrax.Domain.Util.Constants.USER_PREFERENCE_CULTURE] != null) ? (System.Globalization.CultureInfo)Session[PRGX.SIMTrax.Domain.Util.Constants.USER_PREFERENCE_CULTURE] : PRGX.SIMTrax.Web.Controllers.BaseController.ResolveCulture();
    ViewBag.Title = PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.RESET_PASSWORD, userCulture).ToString();
}
@Styles.Render("~/bundles/TipsoCss")
<style>
    .button-width {
        width: 141px;
    }

    .margin-bottom-8 {
        margin-bottom: 8px;
    }

    .full-width {
    }

    .button-seperator {
        position: relative;
        right: 49px;
    }

    .margin-top-13 {
        margin-top: 13px;
    }

    @@media (max-width: 1320px) {
        .button-seperator {
            right: 43px;
        }
    }

    @@media (max-width: 1280px) {
        .button-seperator {
            right: 35px;
        }
    }

    @@media (max-width: 1254px) {
        .button-seperator {
            right: 24px;
        }
    }

    @@media (max-width: 1142px) {
        .button-seperator {
            right: 4px;
        }
    }

    @@media (max-width: 1046px) {
        .button-seperator {
            left: 10px;
        }
    }

    @@media (max-width: 365px) {
        .full-width {
            width: 100%;
        }

        .button-seperator {
            left: 0px;
        }
    }
</style>
<div class="row" style="min-height:460px">

    <div class="col-md-12 padding-bottom-header">
        <h3>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.RESET_PASSWORD, userCulture).ToString()</h3>
    </div>
    <div class="col-md-8">
        <div class="container-white-backgound">
            @if (Model.UserId > 0)
            {
                <div id="resetpasswordformdiv">
                    <form id="resetpasswordform">
                        @Html.HiddenFor(m => m.UserId)
                        @Html.HiddenFor(m => m.Email)
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    <label>
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PASSWORD, userCulture).ToString()
                                    </label>
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    <span id="passwordTipso" class="padding-top-header"></span>
                                    @Html.PasswordFor(m => m.Password, new { @class = " form-control" })
                                </div>
                                <div class="col-md-5 paddingError">
                                    @Html.ValidationMessageFor(m => m.Password)
                                </div>
                            </div>
                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    <label>
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CONFIRM_PASSWORD, userCulture).ToString()
                                    </label>
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    <span id="cnfrmPasswordTipso" class="padding-top-header"></span>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = " form-control" })
                                </div>
                                <div class="col-md-5 paddingError">
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                </div>
                            </div>
                            <div class="padding-top-question margin-top-13">
                                <div class="col-md-3  col-sm-3 col-xs-6 full-width">
                                    <button class="btn btn-color" id="resetpassword">
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.RESET_PASSWORD, userCulture).ToString()
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-12 col-sm-12 col-xs-12 page-sub-heading" id="passwordchangedmessagediv" style="display:none;min-height:165px">
                    @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PASSWORD_RESET_MESSAGE, userCulture).ToString()
                    <div class="padding-top-question margin-top-13">
                        <div class="col-md-3  col-sm-3 col-xs-6 full-width padding-left-zero-desktop">
                            <button class="btn btn-color redirectToLogin">
                                @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.RETURN_TO_LOGIN, userCulture).ToString()
                            </button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div id="requestUrlFormDiv">
                    <form id="requestUrlForm">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="padding-top-question">
                                <div class="col-md-12">
                                    <label>
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL, userCulture).ToString()
                                    </label>
                                </div>
                                <div class="col-md-7 col-sm-7">
                                    @Html.TextBoxFor(m => m.Email, new { @class = " form-control" })
                                </div>
                                <div class="col-md-5 paddingError">
                                    @Html.ValidationMessageFor(m => m.Email)
                                </div>
                            </div>
                            <div class="padding-top-question margin-top-13">
                                <div class="col-md-3  col-sm-3 col-xs-6 margin-bottom-8 full-width padding-right-zero-desktop">
                                    <button class="btn btn-normal button-width redirectToLogin">
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.LOGIN, userCulture).ToString()
                                    </button>
                                </div>
                                <div class="col-md-3  col-sm-3 col-xs-6 full-width padding-left-zero-desktop">
                                    <button class="btn btn-color" id="getyourpassword">
                                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.GET_PASSWORD, userCulture).ToString()
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-12 col-sm-12 col-xs-12 page-sub-heading" id="requestUrlFormMessageDiv" style="display:none;min-height:165px">
                    @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PASSWORD_RESET_URL_SENT_MESSAGE, userCulture).ToString()
                </div>
            }
        </div>
    </div>
    <div class="col-md-4  hidden-xs padding-responsive">
        <div class="container-white-backgound">
            <div class="cnt-us-mar-btm">
                <div class="col-md-12 padding-bottom">
                    <span class="page-sub-heading">
                        @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.HELP_POP_UP_HEADER, userCulture).ToString()
                    </span>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <hr class="border-style">
            </div>
            <div class="row col-md-12">
                <br>
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3 fa fa-envelope fa-opacity fa-3x  col-md-offset-1 col-sm-offset-1 col-xs-offset-1">
                </div>
                <div class="col-md-8 col-sm-7 col-xs-7">
                    <div class="contact-panel-text-color">
                        <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.EMAIL_US, userCulture).ToString()</b>
                    </div>
                    <a href="mailto:@HttpContext.Current.Application["ContactEmail"]" target="_blank">
                        <span>@HttpContext.Current.Application["ContactEmail"]</span>
                    </a>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  fa fa-phone fa-3x padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                </div>
                <div class="col-md-8 col-sm-7 col-xs-7 padding-top">
                    <div class="contact-panel-text-color">
                        <b>@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.CALL_US, userCulture).ToString()</b>
                    </div>
                    <span>@HttpContext.Current.Application["ContactNo"]</span>
                </div>
            </div>
            <div class="row col-md-12 col-sm-12 col-xs-12">
                <div class="contact-panel-font-icons col-md-2 col-sm-3 col-xs-3  padding-top col-md-offset-1 col-sm-offset-1 col-xs-offset-1 fa-opacity">
                    <img style="width:42px" src="~/Content/Images/FAQ.png" />
                </div>
                <div class="col-md-8 col-sm-7 col-xs-7" style="padding-top:18px;">
                    <b>
                        <a class="contact-panel-text-color hoverLink" style="cursor: pointer;" target="FAQ" href="/FAQ">
                            @PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.FAQ, userCulture).ToString()
                        </a>
                    </b>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/Tipso")
<script>
    var defaultErrorText = '@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.DEFAULT_ERROR_MESSAGE, userCulture).ToString()';
    var passwordTipsoText = '@Html.Raw(PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.PASSWORD_TIPSO_MESSAGE, userCulture).ToString())';
    var emailNotExitsText = '@PRGX.SIMTrax.Domain.Util.ReadResource.GetResourceForGlobalization(PRGX.SIMTrax.Domain.Util.Constants.USER_EMAIL_NOT_EXISTS, userCulture).ToString()';

    $('#Password').focus(function () {
        $('#passwordTipso').tipso({
            position: 'top',
            width: 300,
            offsetX: 215
        });
        $('#passwordTipso').tipso('update', 'content', passwordTipsoText);
        $('#passwordTipso').tipso('show');
    });

    $('#Password').focusout(function () {
        $('#passwordTipso').tipso('hide');
    });

    $('#ConfirmPassword').focusout(function () {
        $('#cnfrmPasswordTipso').tipso('hide');
    });

    $('#ConfirmPassword').focus(function () {
        $('#cnfrmPasswordTipso').tipso({
            position: 'top',
            width: 300,
            offsetX: 215
        });
        $('#cnfrmPasswordTipso').tipso('update', 'content', passwordTipsoText);
        $('#cnfrmPasswordTipso').tipso('show');
    });

    $(document).on('click', '#resetpassword', function () {
        $.validator.unobtrusive.parse($('#resetpasswordform'))
        if (!$('#resetpasswordform').valid()) {
            return false;
        }
        $.ajax({
            type: 'post',
            url: '/Account/ResetPasswordFromUrl',
            data: $('#resetpasswordform').serialize(),
            async: true,
            success: function (response) {
                if (typeof (response) != "undefined") {
                    if (response.success) {
                        $('#resetpasswordformdiv').hide();
                        $('#passwordchangedmessagediv').show();
                    }
                    else {
                        showErrorMessage(defaultErrorText);
                    }
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
        return false;
    });

    $(document).on('click', '#getyourpassword', function () {
        var email = $('#Email').val();
        $.validator.unobtrusive.parse($('#requestUrlForm'))
        if (!$('#requestUrlForm').valid()) {
            return false;
        }
        $.ajax({
            type: 'post',
            url: '/Account/TriggerNewPassword',
            data: { email: email },
            async: true,
            success: function (response) {
                if (typeof (response) != "undefined") {
                    if (!response.EmailExists) {
                        showErrorMessage(emailNotExitsText);
                    }
                    if (response.IsSent) {
                        $('#requestUrlFormDiv').hide();
                        $('#requestUrlFormMessageDiv').show();
                    }
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
            }
        });
        return false;
    });

    $(document).on('click', '.redirectToLogin', function () {
        window.location.href = "/Login";
        return false;
    })
</script>
